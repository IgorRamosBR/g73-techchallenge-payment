// Code generated by MockGen. DO NOT EDIT.
// Source: payment_usecase.go
//
// Generated by this command:
//
//	mockgen -source=payment_usecase.go -destination=mocks/payment_usecase.go
//

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	reflect "reflect"

	dto "github.com/IgorRamosBR/g73-techchallenge-payment/internal/core/usecases/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockPaymentUseCase is a mock of PaymentUseCase interface.
type MockPaymentUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentUseCaseMockRecorder
}

// MockPaymentUseCaseMockRecorder is the mock recorder for MockPaymentUseCase.
type MockPaymentUseCaseMockRecorder struct {
	mock *MockPaymentUseCase
}

// NewMockPaymentUseCase creates a new mock instance.
func NewMockPaymentUseCase(ctrl *gomock.Controller) *MockPaymentUseCase {
	mock := &MockPaymentUseCase{ctrl: ctrl}
	mock.recorder = &MockPaymentUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentUseCase) EXPECT() *MockPaymentUseCaseMockRecorder {
	return m.recorder
}

// CreatePaymentOrder mocks base method.
func (m *MockPaymentUseCase) CreatePaymentOrder(paymentOrder dto.PaymentOrderDTO) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePaymentOrder", paymentOrder)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePaymentOrder indicates an expected call of CreatePaymentOrder.
func (mr *MockPaymentUseCaseMockRecorder) CreatePaymentOrder(paymentOrder any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePaymentOrder", reflect.TypeOf((*MockPaymentUseCase)(nil).CreatePaymentOrder), paymentOrder)
}

// NotifyPayment mocks base method.
func (m *MockPaymentUseCase) NotifyPayment(orderId, paymentId int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NotifyPayment", orderId, paymentId)
	ret0, _ := ret[0].(error)
	return ret0
}

// NotifyPayment indicates an expected call of NotifyPayment.
func (mr *MockPaymentUseCaseMockRecorder) NotifyPayment(orderId, paymentId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotifyPayment", reflect.TypeOf((*MockPaymentUseCase)(nil).NotifyPayment), orderId, paymentId)
}
